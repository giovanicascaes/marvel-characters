{"version":3,"sources":["services/api/index.js","constants/parameters.js","components/Message/styles.js","components/Message/index.js","components/Emptiable/index.js","components/Cover/styles.js","components/Cover/index.js","scenes/Home/components/CharacterList/components/List/components/Card/index.js","scenes/Home/components/CharacterList/components/List/components/Grid/styles.js","scenes/Home/components/CharacterList/components/List/components/LoadMoreCard/styles.js","scenes/Home/components/CharacterList/components/List/components/LoadMoreCard/index.js","scenes/Home/components/CharacterList/components/List/components/Grid/index.js","scenes/Home/components/CharacterList/components/List/index.js","services/api/reducer.js","constants/apiRequestStatuses.js","utils/hooks/useMemoryState.js","scenes/Home/components/CharacterList/helpers.js","scenes/Home/components/CharacterList/components/Get/index.js","scenes/Home/components/CharacterList/components/Get/actions.js","scenes/CharacterDetails/components/CharacterInfo/actions.js","scenes/CharacterDetails/components/CharacterSeries/actions.js","scenes/Home/components/CharacterList/components/Search/actions.js","components/Loading/styles.js","components/Loading/index.js","scenes/Home/components/CharacterList/components/Search/index.js","scenes/Home/components/CharacterList/index.js","scenes/Home/components/Search/index.js","scenes/Home/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/styles.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/View/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/validations.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/components/ThemedField/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/components/InputText/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/components/TextArea/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/styles.js","services/storage/index.js","scenes/Home/components/CharacterList/actions.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/components/Edit/index.js","scenes/CharacterDetails/components/CharacterInfo/components/Info/index.js","scenes/CharacterDetails/components/CharacterInfo/index.js","scenes/CharacterDetails/components/CharacterSeries/components/Series/components/Serie/styles.js","scenes/CharacterDetails/components/CharacterSeries/components/Series/components/Serie/index.js","scenes/CharacterDetails/components/CharacterSeries/components/Series/styles.js","scenes/CharacterDetails/components/CharacterSeries/components/Series/index.js","scenes/CharacterDetails/components/CharacterSeries/index.js","utils/hooks/usePrevious.js","scenes/CharacterDetails/components/Header/styles.js","scenes/CharacterDetails/components/Header/index.js","scenes/CharacterDetails/index.js","scenes/components/Router/components/SceneRoute/components/SceneBase/styles.js","scenes/components/Router/components/SceneRoute/components/SceneBase/index.js","scenes/components/Router/components/SceneRoute/index.js","scenes/components/Router/index.js","serviceWorker.js","scenes/Home/components/CharacterList/components/Get/reducer.js","scenes/Home/components/CharacterList/components/Search/reducer.js","scenes/Home/components/CharacterList/reducer.js","scenes/CharacterDetails/components/CharacterInfo/reducer.js","scenes/CharacterDetails/components/CharacterSeries/reducer.js","store/index.js","styles/GlobalStyle.js","index.js","scenes/index.js"],"names":["createAction","rsaa","types","RESQUEST_TYPE","SUCCESS_TYPE","FAILURE_TYPE","type","payload","_action","_state","res","data","doCreateAction","cache","setupCache","maxAge","instance","axios","create","baseURL","process","headers","Accept","adapter","interceptors","request","use","config","ts","Date","getTime","params","apikey","hash","md5","API_ITEMS_PER_PAGE","API_ORDER","Wrapper","styled","div","Title","span","SubTitle","Message","title","subtitle","Emptiable","children","titleWhenEmpty","subtitleWhenEmpty","fadeOut","keyframes","fadeIn","BaseImg","img","props","isHidden","css","ActualImg","isShown","ImgBorder","Cover","isLoading","name","imageUrl","withBorder","className","style","Input","loading","size","active","src","imageProps","imageState","ref","position","alt","ImageState","LoadSuccess","Meta","ThemeCard","Card","id","useState","redirectToDetails","setRedirectToDetails","to","push","hoverable","width","borderRadius","cover","height","borderTopLeftRadius","borderTopRightRadius","onClick","paragraph","StyledCard","CardContent","LoadMoreCard","MoreOutlined","fontSize","CARD_WIDTH","rotate","Grid","characters","hasMoreToLoad","onLoadMore","cards","map","index","thumbnail","key","path","extension","length","List","getStatusByRequestState","requestState","getRequestData","actionType","matches","exec","isStatus","store","status","requestName","isActionLoading","actionTypes","some","isActionSuccess","every","isActionFailure","savedValue","getCharactersLoadingList","countInNextPage","Array","Get","initialState","value","setValue","useEffect","useMemoryState","hasRequested","setHasRequested","useSelector","get","total","offset","count","remainingCharacters","isSuccess","isError","charactersToList","setCharactersToList","dispatch","useDispatch","requestCharacters","useCallback","perPage","orderBy","endpoint","limit","method","response","reset","getCharacters","current","searchCharacters","searchText","meta","action","RSAA","Text","Loading","CharacterList","search","isDoneSearchingCharacters","setIsDoneSearchingCharacters","isSearchMode","SearchInput","Search","storedSearchText","setSearchText","marginBottom","placeholder","enterButton","onChange","e","target","onSearch","allowClear","Home","StyledCover","attrs","View","description","rows","column","Item","label","schema","yup","shape","required","trim","min","ThemedField","CustomField","useField","field","helpers","touched","error","validateWithError","CloseCircleFilled","InputText","ThemeInput","TextArea","minRows","maxRows","autoSize","FormContainer","getCharacter","window","localStorage","JSON","parse","find","character","getAllCharacters","text","filter","info","String","toLowerCase","startsWith","mergeResultsAndStorage","results","storageResults","storedCharacter","putUpdateCharacterInStorage","characterToUpdate","updateCharacter","storedCharacters","characterIndex","findIndex","char","splice","newCharactersList","stringify","saveCharacter","Edit","initialValues","validationSchema","onSubmit","values","setSubmitting","message","isSubmitting","gutter","htmlType","disabled","Info","isEditing","setCharacter","CharacterInfo","series","isLoadingMoreSeries","undefined","characterId","useParams","getCharacterInfo","infoProps","InfoWrapper","Serie","Footer","Series","itemLayout","dataSource","renderItem","descritption","footer","CharcterSeries","seriesToList","setSeriesToList","prevIsLoading","useRef","usePrevious","requestSeries","getCharacterSeries","console","log","getLoadingList","Header","isLoadingCharacter","visibility","CharacterDetails","SceneWrapper","LogoWrapper","NoWrap","SceneBase","routes","onBack","history","subTitle","breadcrumb","breadcrumbName","itemRender","route","border","SceneRoute","otherProps","render","Router","characterName","exact","extra","Boolean","location","hostname","match","INITIAL_STATE","reducer","state","otherData","apiMiddleware","createMiddleware","fetch","api","ok","createStoreWithMiddleware","applyMiddleware","createStore","combineReducers","nextState","getReducer","searchReducer","characterData","requestData","newState","resetType","reduce","prev","GlobalStyle","createGlobalStyle","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a3fab29e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAction as doCreateAction } from \"redux-api-middleware\";\nimport { setupCache } from \"axios-cache-adapter\";\nimport md5 from \"blueimp-md5\";\n\nexport const REQUEST_TYPE_INDEX = 0;\n\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nexport const createAction = rsaa => {\n  let [RESQUEST_TYPE, SUCCESS_TYPE, FAILURE_TYPE] = rsaa.types;\n\n  if (typeof SUCCESS_TYPE === \"string\") {\n    SUCCESS_TYPE = {\n      type: SUCCESS_TYPE,\n      payload: (_action, _state, res) => res.data\n    };\n  } else if (!SUCCESS_TYPE.payload) {\n    SUCCESS_TYPE.payload = (_action, _state, res) => res.data;\n  }\n\n  return doCreateAction({\n    ...rsaa,\n    types: [RESQUEST_TYPE, SUCCESS_TYPE, FAILURE_TYPE]\n  });\n};\n\nconst cache = setupCache({\n  maxAge: ONE_DAY\n});\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    Accept: \"application/json\"\n  },\n  adapter: cache.adapter\n});\ninstance.interceptors.request.use(config => {\n  const ts = new Date().getTime();\n  config.params = {\n    apikey: process.env.REACT_APP_PUBLIC_API_KEY,\n    ts,\n    hash: md5(\n      ts +\n        process.env.REACT_APP_PRIVATE_API_KEY +\n        process.env.REACT_APP_PUBLIC_API_KEY\n    )\n  };\n  return config;\n});\n\nexport default instance;\n","export const API_ITEMS_PER_PAGE = {\n  GET_CHARACTERS: 20,\n  GET_SERIES: 10\n};\n\nexport const API_ORDER = {\n  GET_CHARACTERS: \"name\",\n  GET_SERIES: \"title\"\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.span`\n  font-weight: bold;\n  font-size: 22px;\n  color: grey;\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const SubTitle = styled.span`\n  font-size: 12px;\n  color: grey;\n  display: block;\n`;\n","import React from \"react\";\nimport { Wrapper, Title, SubTitle } from \"./styles\";\n\nexport default function Message({\n  title = \"Nothing here :(\",\n  subtitle = \"No records found\"\n}) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <SubTitle>{subtitle}</SubTitle>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport Message from \"../Message\";\n\nexport default function Emptiable({\n  children,\n  titleWhenEmpty,\n  subtitleWhenEmpty\n}) {\n  if (!children) {\n    return <Message title={titleWhenEmpty} subtitle={subtitleWhenEmpty} />;\n  }\n  return <>{children}</>;\n}\n","import styled, { keyframes, css } from \"styled-components\";\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    display: none;\n  }\n`;\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const BaseImg = styled.img`\n  display: block;\n  object-fit: cover;\n  ${props =>\n    props.isHidden &&\n    css`\n      animation: 0.3s ${fadeOut} ease-out;\n      animation-fill-mode: forwards;\n    `};\n`;\n\nexport const ActualImg = styled.img`\n  visibility: hidden;\n  position: absolute;\n  ${props =>\n    props.isShown &&\n    css`\n      animation: 0.3s ${fadeIn} ease-out;\n      top: 0;\n      z-index: 1;\n      object-fit: cover;\n      display: block;\n      visibility: visible;\n    `};\n`;\n\nexport const ImgBorder = styled.div`\n  position: absolute;\n  top: 0;\n  z-index: 2;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n`;\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport { LazyImageFull, ImageState } from \"react-lazy-images\";\nimport { BaseImg, ActualImg, ImgBorder } from \"./styles\";\n\nexport default function Cover({\n  isLoading,\n  name,\n  imageUrl,\n  withBorder = false,\n  className,\n  style\n}) {\n  if (isLoading)\n    return (\n      <Skeleton.Input\n        loading={isLoading}\n        size=\"large\"\n        active\n        className={className}\n        style={style}\n      />\n    );\n\n  return (\n    <LazyImageFull src={imageUrl} className={className} style={style}>\n      {({ imageProps, imageState, ref }) => (\n        <div style={{ position: \"relative\" }}>\n          <BaseImg\n            {...imageProps}\n            ref={ref}\n            src={`${process.env.PUBLIC_URL}/res/img/loading.gif`}\n            alt={\"Loading icon\"}\n            isHidden={imageState === ImageState.LoadSuccess}\n          />\n          <ActualImg\n            {...imageProps}\n            ref={ref}\n            src={imageProps.src}\n            alt={`${name}'s thumbnail`}\n            isShown={imageState === ImageState.LoadSuccess}\n          />\n          {withBorder && imageState === ImageState.LoadSuccess && (\n            <ImgBorder\n              className={imageProps.className}\n              style={imageProps.style}\n            />\n          )}\n        </div>\n      )}\n    </LazyImageFull>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card as ThemeCard, Skeleton } from \"antd\";\nimport Cover from \"components/Cover\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Meta } = ThemeCard;\n\nexport const CARD_WIDTH = 280;\nexport const CARD_HEIGHT = 340;\n\nexport default function Card({ id, name, imageUrl, isLoading }) {\n  const [redirectToDetails, setRedirectToDetails] = useState(false);\n\n  const onClick = () => setRedirectToDetails(true);\n\n  if (redirectToDetails) return <Redirect to={`/character/${id}`} push />;\n\n  return (\n    <ThemeCard\n      hoverable={!isLoading}\n      style={{ width: CARD_WIDTH, borderRadius: 10 }}\n      cover={\n        <Cover\n          name={name}\n          imageUrl={imageUrl}\n          isLoading={isLoading}\n          style={{\n            width: CARD_WIDTH,\n            height: CARD_HEIGHT,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          }}\n        />\n      }\n      onClick={onClick}\n    >\n      <Skeleton paragraph={false} loading={isLoading} active>\n        <Meta title={name} />\n      </Skeleton>\n    </ThemeCard>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  grid-gap: 20px;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { Card } from \"antd\";\n\nexport const StyledCard = styled(Card)`\n  object-fit: cover;\n\n  div.ant-card-body {\n    height: 100%;\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n","import React from \"react\";\nimport { StyledCard as Card, CardContent } from \"./styles\";\nimport { MoreOutlined } from \"@ant-design/icons\";\nimport { CARD_WIDTH } from \"scenes/Home/components/CharacterList/components/List/components/Card\";\n\nexport default function LoadMoreCard({ onClick }) {\n  return (\n    <Card\n      hoverable\n      onClick={onClick}\n      style={{\n        width: CARD_WIDTH,\n        height: \"100%\",\n        borderRadius: 10\n      }}\n    >\n      <CardContent>\n        <MoreOutlined style={{ fontSize: CARD_WIDTH * 0.5 }} rotate={90} />\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Card from \"scenes/Home/components/CharacterList/components/List/components/Card\";\nimport { Wrapper } from \"./styles\";\nimport LoadMoreCard from \"scenes/Home/components/CharacterList/components/List/components/LoadMoreCard\";\n\nexport default function Grid({\n  characters,\n  isLoading,\n  hasMoreToLoad,\n  onLoadMore\n}) {\n  const cards = characters.map(({ id, name, thumbnail, imageUrl }, index) => (\n    <Card\n      key={index}\n      id={id}\n      name={name}\n      imageUrl={\n        thumbnail ? `${thumbnail.path}.${thumbnail.extension}` : imageUrl || \"\"\n      }\n      isLoading={isLoading && !id}\n    />\n  ));\n\n  if (hasMoreToLoad) {\n    cards.push(<LoadMoreCard onClick={onLoadMore} key={cards.length + 1} />);\n  }\n\n  return <Wrapper>{cards}</Wrapper>;\n}\n","import React from \"react\";\nimport Emptiable from \"components/Emptiable\";\nimport Grid from \"./components/Grid\";\n\nexport default function List({\n  characters,\n  isLoading,\n  hasMoreToLoad,\n  onLoadMore\n}) {\n  return (\n    <Emptiable>\n      {characters.length && (\n        <Grid\n          characters={characters}\n          isLoading={isLoading}\n          hasMoreToLoad={hasMoreToLoad}\n          onLoadMore={onLoadMore}\n        />\n      )}\n    </Emptiable>\n  );\n}\n","import {\n  IDLE,\n  PENDING,\n  REJECTED,\n  RESOLVED\n} from \"constants/apiRequestStatuses\";\n\nfunction getStatusByRequestState(requestState) {\n  switch (requestState) {\n    case \"REQUEST\":\n      return PENDING;\n\n    case \"SUCCESS\":\n      return RESOLVED;\n\n    case \"FAILURE\":\n      return REJECTED;\n\n    default:\n      return IDLE;\n  }\n}\n\nfunction getRequestData(actionType) {\n  const matches = /(.*)_(REQUEST|SUCCESS|FAILURE|RESET)/.exec(actionType);\n\n  if (!matches) return false;\n\n  const [, requestName, requestState] = matches;\n\n  return [requestName, requestState];\n}\n\nexport default function statuReducer(state = {}, action) {\n  const { type, payload } = action;\n\n  const requestData = getRequestData(type);\n\n  if (!requestData) {\n    return state;\n  }\n\n  const [requestName, requestState] = requestData;\n\n  const newState = {\n    ...state,\n    [requestName]: getStatusByRequestState(requestState)\n  };\n\n  if (payload && payload.reset) {\n    return {\n      ...newState,\n      ...payload.reset\n        .map(resetType => getRequestData(resetType))\n        .filter(requestData => !!requestData)\n        .reduce((prev, [requestName]) => ({\n          ...prev,\n          [requestName]: IDLE\n        }))\n    };\n  }\n\n  return newState;\n}\n\nfunction isStatus(store, status, actionType) {\n  const [requestName] = getRequestData(actionType);\n  const typeNotStarted = !store.status || !store.status[requestName];\n\n  if (typeNotStarted) {\n    return status === IDLE;\n  }\n\n  return store.status[requestName] === status;\n}\n\nexport function isActionLoading(store, ...actionTypes) {\n  return actionTypes.some(type => isStatus(store, PENDING, type));\n}\n\nexport function isActionSuccess(store, ...actionTypes) {\n  return actionTypes.every(type => isStatus(store, RESOLVED, type));\n}\n\nexport function isActionFailure(store, ...actionTypes) {\n  return actionTypes.some(type => isStatus(store, REJECTED, type));\n}\n","export const IDLE = \"idle\";\nexport const PENDING = \"pending\";\nexport const RESOLVED = \"resolved\";\nexport const REJECTED = \"rejected\";\n","import { useState, useEffect } from \"react\";\n\nlet savedValue = null;\n\nexport default function useMemoryState(initialState) {\n  const [value, setValue] = useState(savedValue ?? initialState);\n\n  useEffect(() => {\n    savedValue = value;\n  }, [value]);\n\n  return [value, setValue];\n}\n","import { API_ITEMS_PER_PAGE } from \"constants/parameters\";\n\nexport function getCharactersLoadingList(countInNextPage) {\n  return [\n    ...new Array(countInNextPage || API_ITEMS_PER_PAGE.GET_CHARACTERS)\n  ].map(() => ({\n    name: \"\",\n    thumbnail: null\n  }));\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacters } from \"./actions\";\nimport List from \"../List\";\nimport Message from \"components/Message\";\nimport {\n  isActionLoading,\n  isActionSuccess,\n  isActionFailure\n} from \"services/api/reducer\";\nimport { CHARACTER_GET_REQUEST } from \"./actions\";\nimport useMemoryState from \"utils/hooks/useMemoryState\";\nimport { getCharactersLoadingList } from \"../../helpers\";\nimport { API_ITEMS_PER_PAGE } from \"constants/parameters\";\n\nexport default function Get() {\n  const [hasRequested, setHasRequested] = useMemoryState(false);\n  const {\n    characters,\n    isLoading,\n    isSuccess,\n    isError,\n    hasMoreToLoad,\n    countInNextPage\n  } = useSelector(store => {\n    const { characters, total, offset, count } = store.characters.get;\n    const hasMoreToLoad = offset + count < total;\n    let countInNextPage = null;\n\n    if (hasMoreToLoad) {\n      const remainingCharacters = total - offset + count;\n\n      if (remainingCharacters > API_ITEMS_PER_PAGE.GET_CHARACTERS) {\n        countInNextPage = API_ITEMS_PER_PAGE.GET_CHARACTERS;\n      } else {\n        countInNextPage = remainingCharacters;\n      }\n    }\n\n    return {\n      characters,\n      isLoading: isActionLoading(store, CHARACTER_GET_REQUEST),\n      isSuccess: isActionSuccess(store, CHARACTER_GET_REQUEST),\n      isError: isActionFailure(store, CHARACTER_GET_REQUEST),\n      hasMoreToLoad,\n      countInNextPage\n    };\n  });\n  const [charactersToList, setCharactersToList] = useState([]);\n  const dispatch = useDispatch();\n\n  const requestCharacters = useCallback(() => {\n    dispatch(getCharacters());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!hasRequested) {\n      setHasRequested(true);\n      requestCharacters();\n    }\n  }, [hasRequested, requestCharacters, setHasRequested]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setCharactersToList(current => [\n        ...current,\n        ...getCharactersLoadingList(countInNextPage)\n      ]);\n    }\n  }, [isLoading, countInNextPage]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      setCharactersToList(characters);\n    }\n  }, [characters, isSuccess]);\n\n  if (isError) {\n    return (\n      <Message\n        title=\"Ocorreu um erro ao buscar os personagens\"\n        subtitle=\"Por favor, tente novamente mais tarde\"\n      />\n    );\n  }\n\n  return (\n    <List\n      characters={charactersToList}\n      isLoading={isLoading}\n      hasMoreToLoad={hasMoreToLoad}\n      onLoadMore={requestCharacters}\n    />\n  );\n}\n","import { createAction } from \"services/api\";\nimport { API_ITEMS_PER_PAGE, API_ORDER } from \"constants/parameters\";\nimport { CHARACTER_GET_INFO_REQUEST } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\nimport { CHARACTER_GET_SERIES_REQUEST } from \"scenes/CharacterDetails/components/CharacterSeries/actions\";\n\nexport const CHARACTER_GET_REQUEST = \"character/GET_REQUEST\";\nexport const CHARACTER_GET_SUCCESS = \"character/GET_SUCCESS\";\nexport const CHARACTER_GET_FAILURE = \"character/GET_FAILURE\";\n\nexport const getCharacters = (\n  perPage = API_ITEMS_PER_PAGE.GET_CHARACTERS,\n  orderBy = API_ORDER.GET_CHARACTERS\n) =>\n  createAction({\n    endpoint: ({ characters }) => {\n      const { total, offset, limit, count } = characters.get;\n      return `/characters?limit=${perPage}&orderBy=${orderBy}${\n        offset + count < total ? `&offset=${offset + limit}` : \"\"\n      }`;\n    },\n    method: \"GET\",\n    types: [\n      CHARACTER_GET_REQUEST,\n      {\n        type: CHARACTER_GET_SUCCESS,\n        payload: (_action, _state, res) => ({\n          response: res.data,\n          reset: [CHARACTER_GET_INFO_REQUEST, CHARACTER_GET_SERIES_REQUEST]\n        })\n      },\n      CHARACTER_GET_FAILURE\n    ]\n  });\n","import { createAction } from \"services/api\";\n\nexport const CHARACTER_GET_INFO_REQUEST = \"character/GET_INFO_REQUEST\";\nexport const CHARACTER_GET_INFO_SUCCESS = \"character/GET_INFO_SUCCESS\";\nexport const CHARACTER_GET_INFO_FAILURE = \"character/GET_INFO_FAILURE\";\n\nexport const CHARACTER_TOGGLE_EDIT = \"character/CHARACTER_TOGGLE_EDIT\";\nexport const CHARACTER_UPDATE_INFO = \"character/CHARACTER_UPDATE_INFO\";\n\nexport const getCharacterInfo = characterId =>\n  createAction({\n    endpoint: `/characters/${characterId}`,\n    method: \"GET\",\n    types: [\n      CHARACTER_GET_INFO_REQUEST,\n      CHARACTER_GET_INFO_SUCCESS,\n      CHARACTER_GET_INFO_FAILURE\n    ]\n  });\n\nexport const toggleEditCharacter = () => ({\n  type: CHARACTER_TOGGLE_EDIT\n});\n\nexport const updateCharacterInfo = characterInfo => ({\n  type: CHARACTER_UPDATE_INFO,\n  payload: characterInfo\n});\n","import { createAction } from \"services/api\";\nimport { API_ITEMS_PER_PAGE, API_ORDER } from \"constants/parameters\";\n\nexport const CHARACTER_GET_SERIES_REQUEST = \"character/GET_SERIES_REQUEST\";\nexport const CHARACTER_GET_SERIES_SUCCESS = \"character/GET_SERIES_SUCCESS\";\nexport const CHARACTER_GET_SERIES_FAILURE = \"character/GET_SERIES_FAILURE\";\n\nexport const CHARACTER_CLEAR_SERIES = \"character/CHARACTER_CLEAR_SERIES\";\n\nexport const getCharacterSeries = (\n  characterId,\n  perPage = API_ITEMS_PER_PAGE.GET_SERIES,\n  orderBy = API_ORDER.GET_SERIES\n) =>\n  createAction({\n    endpoint: ({ character }) => {\n      const { total, offset, limit, count } = character.series;\n      return `/characters/${characterId}/series?limit=${perPage}&orderBy=${orderBy}${\n        offset + count < total ? `&offset=${offset + limit}` : \"\"\n      }`;\n    },\n    method: \"GET\",\n    types: [\n      CHARACTER_GET_SERIES_REQUEST,\n      CHARACTER_GET_SERIES_SUCCESS,\n      CHARACTER_GET_SERIES_FAILURE\n    ]\n  });\n\nexport const clearSeries = () => ({\n  type: CHARACTER_CLEAR_SERIES\n});\n","import { createAction, REQUEST_TYPE_INDEX } from \"services/api\";\nimport { RSAA } from \"redux-api-middleware\";\nimport { API_ITEMS_PER_PAGE, API_ORDER } from \"constants/parameters\";\n\nexport const CHARACTER_SEARCH_REQUEST = \"character/SEARCH_REQUEST\";\nexport const CHARACTER_SEARCH_SUCCESS = \"character/SEARCH_SUCCESS\";\nexport const CHARACTER_SEARCH_FAILURE = \"character/SEARCH_FAILURE\";\n\nexport const CHARACTER_SEARCH_RESET = \"character/SEARCH_RESET\";\n\nexport const searchCharacters = (\n  searchText,\n  perPage = API_ITEMS_PER_PAGE.GET_CHARACTERS,\n  orderBy = API_ORDER.GET_CHARACTERS\n) =>\n  createAction({\n    endpoint: ({ characters }) => {\n      const { total, offset, limit, count } = characters;\n      return `/characters?limit=${perPage}&orderBy=${orderBy}&nameStartsWith=${searchText}${\n        offset + count < total ? `&offset=${offset + limit}` : \"\"\n      }`;\n    },\n    method: \"GET\",\n    types: [\n      {\n        type: CHARACTER_SEARCH_REQUEST,\n        meta: {\n          searchText\n        }\n      },\n      {\n        type: CHARACTER_SEARCH_SUCCESS,\n        meta: action => ({\n          searchText: action[RSAA].types[REQUEST_TYPE_INDEX].meta.searchText\n        })\n      },\n      CHARACTER_SEARCH_FAILURE\n    ]\n  });\n\nexport const clearSearch = () => ({ type: CHARACTER_SEARCH_RESET });\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nexport const Text = styled.span`\n  font-size: 22px;\n  font-weight: bold;\n  color: grey;\n`;\n","import React from \"react\";\nimport { Wrapper, Text } from \"./styles\";\n\nexport default function Loading() {\n  return (\n    <Wrapper>\n      <Text>Loading...</Text>\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport List from \"../List\";\nimport Message from \"components/Message\";\nimport {\n  isActionLoading,\n  isActionSuccess,\n  isActionFailure\n} from \"services/api/reducer\";\nimport { CHARACTER_SEARCH_REQUEST, searchCharacters } from \"./actions\";\nimport Loading from \"components/Loading\";\nimport { getCharactersLoadingList } from \"../../helpers\";\nimport { API_ITEMS_PER_PAGE } from \"constants/parameters\";\n\nexport default function CharacterList() {\n  const {\n    characters,\n    isLoading,\n    isSuccess,\n    isError,\n    hasMoreToLoad,\n    countInNextPage\n  } = useSelector(store => {\n    const { characters, total, offset, count } = store.characters.search;\n    const hasMoreToLoad = offset + count < total;\n    let countInNextPage = null;\n\n    if (hasMoreToLoad) {\n      const remainingCharacters = total - offset + count;\n\n      if (remainingCharacters > API_ITEMS_PER_PAGE.GET_CHARACTERS) {\n        countInNextPage = API_ITEMS_PER_PAGE.GET_CHARACTERS;\n      } else {\n        countInNextPage = remainingCharacters;\n      }\n    }\n\n    return {\n      characters,\n      isLoading: isActionLoading(store, CHARACTER_SEARCH_REQUEST),\n      isSuccess: isActionSuccess(store, CHARACTER_SEARCH_REQUEST),\n      isError: isActionFailure(store, CHARACTER_SEARCH_REQUEST),\n      hasMoreToLoad,\n      countInNextPage\n    };\n  });\n  const [charactersToList, setCharactersToList] = useState([]);\n  const [isDoneSearchingCharacters, setIsDoneSearchingCharacters] = useState(\n    false\n  );\n\n  useEffect(() => {\n    if (isLoading) {\n      setCharactersToList(current => [\n        ...current,\n        ...getCharactersLoadingList(countInNextPage)\n      ]);\n    }\n  }, [isLoading, countInNextPage]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      setCharactersToList(characters);\n      setIsDoneSearchingCharacters(true);\n    }\n  }, [characters, isSuccess]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setIsDoneSearchingCharacters(false);\n    }\n  }, [isLoading]);\n\n  if (isError) {\n    return (\n      <Message\n        title=\"Ocorreu um erro ao buscar os personagens\"\n        subtitle=\"Por favor, tente novamente mais tarde\"\n      />\n    );\n  }\n\n  if (!isDoneSearchingCharacters) {\n    return <Loading />;\n  }\n\n  return (\n    <List\n      characters={charactersToList}\n      isLoading={isLoading}\n      hasMoreToLoad={hasMoreToLoad}\n      onLoadMore={searchCharacters}\n    />\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Get from \"./components/Get\";\nimport Search from \"./components/Search\";\n\nexport default function CharacterList() {\n  const isSearchMode = useSelector(store => store.characters.isSearchMode);\n\n  if (isSearchMode) return <Search />;\n\n  return <Get />;\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  searchCharacters,\n  clearSearch\n} from \"scenes/Home/components/CharacterList/components/Search/actions\";\nimport { Input } from \"antd\";\n\nconst { Search: SearchInput } = Input;\n\nexport default function Search() {\n  const storedSearchText = useSelector(\n    store => store.characters.search.searchText\n  );\n  const [searchText, setSearchText] = useState(storedSearchText);\n  const dispatch = useDispatch();\n\n  function search(value) {\n    if (!value) {\n      dispatch(clearSearch());\n    } else {\n      dispatch(searchCharacters(value));\n    }\n  }\n\n  return (\n    <div style={{ marginBottom: 40 }}>\n      <SearchInput\n        placeholder=\"Search a character\"\n        enterButton=\"Search\"\n        size=\"large\"\n        value={searchText}\n        onChange={e => setSearchText(e.target.value)}\n        onSearch={search}\n        allowClear\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport CharacterList from \"./components/CharacterList\";\nimport Search from \"./components/Search\";\n\nexport default function Home() {\n  return (\n    <>\n      <Search />\n      <CharacterList />\n    </>\n  );\n}\n","import styled, { css } from \"styled-components\";\nimport Cover from \"components/Cover\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nexport const StyledCover = styled(Cover).attrs({\n  style: { height: 440 },\n  withBorder: true\n})`\n  border-radius: 10px;\n  ${props =>\n    !props.isLoading &&\n    css`\n      box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.5);\n    `};\n  width: 350px;\n  margin-bottom: 80px;\n`;\n","import React from \"react\";\nimport { Descriptions, Skeleton } from \"antd\";\n\nexport default function View({ isLoading, id, name, description }) {\n  return (\n    <Skeleton loading={isLoading} paragraph={{ rows: 3 }} active>\n      <div>\n        <h3>Character Info</h3>\n        <Descriptions column={2}>\n          <Descriptions.Item label=\"ID\" key=\"id\">\n            {id}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Name\" key=\"name\">\n            {name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Description\" key=\"description\">\n            {description || \"<None>\"}\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n    </Skeleton>\n  );\n}\n","import * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  id: yup\n    .number()\n    .required()\n    .label(\"ID\"),\n  name: yup\n    .string()\n    .trim()\n    .min(3)\n    .required()\n    .label(\"Name\"),\n  description: yup\n    .string()\n    .trim()\n    .label(\"Description\")\n});\n\nexport default schema;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\n\nexport default function ThemedField({ CustomField, ...props }) {\n  const [field, meta, helpers] = useField(props);\n  const { touched, error } = meta;\n  const validateWithError = touched && error;\n\n  return (\n    <div\n      className={`ant-row ant-form-item ant-form-item-with-help ant-form-item-has-feedback ${validateWithError &&\n        \"ant-form-item-has-error\"}`}\n    >\n      <div className=\"ant-col ant-form-item-control\">\n        <div className=\"ant-form-item-control-input\">\n          <div className=\"ant-form-item-control-input-content\">\n            <CustomField {...field} {...helpers} {...props} />\n          </div>\n          {validateWithError && (\n            <span className=\"ant-form-item-children-icon\">\n              <CloseCircleFilled />\n            </span>\n          )}\n        </div>\n        {validateWithError && (\n          <div className=\"ant-form-item-explain show-help show-help-enter show-help-enter-active\">\n            <div>{error}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Input as ThemeInput } from \"antd\";\nimport ThemedField from \"../ThemedField\";\n\nexport default function InputText({ name, placeholder }) {\n  return (\n    <ThemedField\n      CustomField={ThemeInput}\n      name={name}\n      type=\"text\"\n      placeholder={placeholder}\n    />\n  );\n}\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport ThemedField from \"../ThemedField\";\n\nexport default function TextArea({\n  name,\n  placeholder,\n  minRows = 3,\n  maxRows = 10\n}) {\n  return (\n    <ThemedField\n      CustomField={Input.TextArea}\n      name={name}\n      placeholder={placeholder}\n      autoSize={{ minRows, maxRows }}\n    />\n  );\n}\n","import styled from \"styled-components\";\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n","const key = \"@softplan-test/CHARACTERS\";\n\nexport function saveCharacter(character) {\n  const { [key]: storedCharacters } = window.localStorage;\n  const characters = storedCharacters ? JSON.parse(storedCharacters) : [];\n  const characterIndex = characters.findIndex(char => char.id === character.id);\n\n  if (characterIndex !== -1) {\n    characters.splice(characterIndex, 1);\n  }\n\n  let newCharactersList = [...characters, character];\n  window.localStorage[key] = JSON.stringify(newCharactersList);\n}\n\nexport function getCharacter(id) {\n  const { [key]: characters } = window.localStorage;\n\n  if (!characters) return null;\n\n  return JSON.parse(characters).find(character => character.id === id);\n}\n\nfunction getAllCharacters() {\n  const { [key]: characters } = window.localStorage;\n\n  if (!characters) return [];\n\n  return JSON.parse(characters);\n}\n\nfunction searchCharacters(text) {\n  const { [key]: characters } = window.localStorage;\n\n  if (!characters) return [];\n\n  return JSON.parse(characters).filter(({ id, name, description }) =>\n    [id, name, description].some(info =>\n      String(info)\n        .toLowerCase()\n        .startsWith(text.toLowerCase())\n    )\n  );\n}\n\nexport function mergeResultsAndStorage(results, searchText = null) {\n  let storageResults;\n\n  if (searchText) {\n    storageResults = searchCharacters(searchText);\n\n    if (!results.length) {\n      return storageResults;\n    }\n  } else {\n    storageResults = getAllCharacters();\n  }\n\n  return results.map(character => {\n    const storedCharacter = storageResults.find(\n      storedCharacter => storedCharacter.id === character.id\n    );\n    return storedCharacter ? { ...character, ...storedCharacter } : character;\n  });\n}\n\nexport function putUpdateCharacterInStorage(characters, characterToUpdate) {\n  return characters.map(character => {\n    if (character.id !== characterToUpdate.id) return character;\n\n    return { ...character, ...characterToUpdate };\n  });\n}\n","import { saveCharacter } from \"services/storage\";\n\nexport const CHARACTER_SEARCH_RESET = \"character/SEARCH_RESET\";\nexport const CHARACTER_UPDATE = \"character/UPDATE\";\n\nexport const updateCharacter = payload => {\n  saveCharacter(payload);\n\n  return {\n    type: CHARACTER_UPDATE,\n    payload\n  };\n};\n","// Render Prop\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport validationSchema from \"./validations\";\nimport InputText from \"./components/InputText\";\nimport TextArea from \"./components/TextArea\";\nimport { Row, Col, Button, Descriptions, message } from \"antd\";\nimport { FormContainer } from \"./styles\";\nimport { updateCharacter } from \"scenes/Home/components/CharacterList/actions\";\nimport { updateCharacterInfo } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\n\nexport default function Edit({\n  id = 0,\n  name = \"\",\n  description = \"\",\n  imageUrl = \"\"\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Formik\n        initialValues={{\n          id: id,\n          name: name,\n          description: description\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          dispatch(updateCharacter({ ...values, imageUrl }));\n          dispatch(updateCharacterInfo(values));\n          setSubmitting(false);\n          message.info(\"Successfully edited\");\n        }}\n      >\n        {({ isSubmitting }) => (\n          <>\n            <h3>Editing Character</h3>\n            <Form>\n              <FormContainer>\n                <div style={{ width: \"100%\" }}>\n                  <Row gutter={[16, 16]}>\n                    <Col span={12}>\n                      <Descriptions>\n                        <Descriptions.Item label=\"ID\">{id}</Descriptions.Item>\n                      </Descriptions>\n                    </Col>\n                    <Col span={12}>\n                      <InputText placeholder=\"Name\" name=\"name\" />\n                    </Col>\n                  </Row>\n                  <Row gutter={[16, 16]}>\n                    <Col span={24}>\n                      <TextArea placeholder=\"Description\" name=\"description\" />\n                    </Col>\n                  </Row>\n                </div>\n\n                <Button htmlType=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </FormContainer>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Wrapper, StyledCover as Cover } from \"./styles\";\nimport View from \"./components/View\";\nimport Edit from \"./components/Edit\";\n\nexport default function Info({\n  isLoading,\n  isEditing,\n  imageUrl,\n  id,\n  name,\n  description\n}) {\n  const [character, setCharacter] = useState({\n    id,\n    name,\n    description\n  });\n\n  const updateCharacter = useCallback(\n    () =>\n      setCharacter({\n        id,\n        name,\n        description\n      }),\n    [description, id, name]\n  );\n\n  useEffect(() => {\n    updateCharacter();\n  }, [id, name, description, updateCharacter]);\n\n  return (\n    <Wrapper>\n      <Cover imageUrl={imageUrl} isLoading={isLoading} name={name} />\n      {isEditing ? (\n        <Edit {...character} imageUrl={imageUrl} />\n      ) : (\n        <View {...character} isLoading={isLoading} />\n      )}\n    </Wrapper>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCharacterInfo } from \"./actions\";\nimport Info from \"./components/Info\";\nimport { isActionLoading, isActionFailure } from \"services/api/reducer\";\nimport { CHARACTER_GET_INFO_REQUEST } from \"./actions\";\nimport { CHARACTER_GET_SERIES_REQUEST } from \"scenes/CharacterDetails/components/CharacterSeries/actions\";\n\nexport default function CharacterInfo() {\n  const { character, isLoading, isError, isEditing } = useSelector(store => {\n    const { info, series } = store.character;\n    const { data, isEditing } = info;\n    const { offset } = series;\n    const isLoadingMoreSeries = offset !== undefined;\n\n    return {\n      character: data,\n      isLoading:\n        isActionLoading(\n          store,\n          CHARACTER_GET_INFO_REQUEST,\n          CHARACTER_GET_SERIES_REQUEST\n        ) && !isLoadingMoreSeries,\n      isError: isActionFailure(\n        store,\n        CHARACTER_GET_INFO_REQUEST,\n        CHARACTER_GET_SERIES_REQUEST\n      ),\n      isEditing\n    };\n  });\n  const dispatch = useDispatch();\n  const { characterId } = useParams();\n\n  useEffect(() => {\n    dispatch(getCharacterInfo(characterId));\n  }, [characterId, dispatch]);\n\n  if (isError) {\n    return null;\n  }\n\n  const { thumbnail, imageUrl, id, name, description } = character;\n\n  const infoProps = isLoading\n    ? {\n        imageUrl: \"\",\n        id: 0,\n        name: \"\",\n        description: \"\"\n      }\n    : {\n        imageUrl: thumbnail\n          ? `${thumbnail.path}.${thumbnail.extension}`\n          : imageUrl || \"\",\n        id,\n        name,\n        description\n      };\n\n  return <Info {...infoProps} isLoading={isLoading} isEditing={isEditing} />;\n}\n","import styled from \"styled-components\";\nimport Cover from \"components/Cover\";\n\nconst COVER_WIDTH = 150;\nconst COVER_HEIGHT = 200;\n\nexport const StyledCover = styled(Cover).attrs({\n  style: {\n    height: COVER_HEIGHT\n  }\n})`\n  border-radius: 4px;\n  width: ${COVER_WIDTH}px;\n  margin-right: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: flex-start;\n`;\n\nexport const InfoWrapper = styled.div`\n  width: calc(100% - ${COVER_WIDTH}px);\n`;\n","import React from \"react\";\nimport { List, Skeleton } from \"antd\";\nimport { StyledCover as Cover, Wrapper, InfoWrapper } from \"./styles\";\n\nexport default function Serie({ isLoading, imageUrl, title, description }) {\n  return (\n    <List.Item>\n      <Wrapper>\n        <Cover isLoading={isLoading} imageUrl={imageUrl} />\n        <InfoWrapper>\n          <Skeleton loading={isLoading} active>\n            <List.Item.Meta\n              title={title}\n              description={description || \"<No description>\"}\n            />\n          </Skeleton>\n        </InfoWrapper>\n      </Wrapper>\n    </List.Item>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px 20px;\n`;\n","import React from \"react\";\nimport { List, Skeleton, Button } from \"antd\";\nimport Emptiable from \"components/Emptiable\";\nimport Serie from \"./components/Serie\";\nimport { Footer } from \"./styles\";\n\nexport default function Series({\n  isLoading,\n  series,\n  hasMoreToLoad,\n  onLoadMore\n}) {\n  return (\n    <>\n      <Skeleton loading={isLoading} active paragraph={false}>\n        <h3>Series</h3>\n      </Skeleton>\n      <Emptiable titleWhenEmpty=\"Character hasn't appeared in series\">\n        {(isLoading || series.length) && (\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={series}\n            renderItem={({ id, thumbnail, title, descritption }) => (\n              <Serie\n                isLoading={isLoading && !id}\n                imageUrl={\n                  thumbnail ? `${thumbnail.path}.${thumbnail.extension}` : \"\"\n                }\n                title={title}\n                description={descritption}\n              />\n            )}\n            footer={\n              hasMoreToLoad && (\n                <Footer>\n                  <Button type=\"link\" onClick={onLoadMore}>\n                    Load More...\n                  </Button>\n                </Footer>\n              )\n            }\n          />\n        )}\n      </Emptiable>\n    </>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCharacterSeries, clearSeries } from \"./actions\";\nimport Series from \"./components/Series\";\nimport {\n  isActionLoading,\n  isActionFailure,\n  isActionSuccess\n} from \"services/api/reducer\";\nimport { CHARACTER_GET_SERIES_REQUEST } from \"./actions\";\nimport { CHARACTER_GET_INFO_REQUEST } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\nimport { API_ITEMS_PER_PAGE } from \"constants/parameters\";\nimport usePrevious from \"utils/hooks/usePrevious\";\n\nfunction getLoadingList(countInNextPage) {\n  console.log(\"count:\", countInNextPage);\n  return [...new Array(countInNextPage || API_ITEMS_PER_PAGE.GET_SERIES)].map(\n    () => ({\n      id: 0,\n      title: \"\",\n      description: \"\",\n      thumbnail: null\n    })\n  );\n}\n\nexport default function CharcterSeries() {\n  const {\n    series,\n    isLoading,\n    isSuccess,\n    isError,\n    hasMoreToLoad,\n    countInNextPage\n  } = useSelector(store => {\n    const { series, total, offset, count } = store.character.series;\n    const hasMoreToLoad = offset + count < total;\n    let countInNextPage;\n\n    if (hasMoreToLoad) {\n      const remainingCharacters = total - offset + count;\n\n      if (remainingCharacters > API_ITEMS_PER_PAGE.GET_SERIES) {\n        countInNextPage = API_ITEMS_PER_PAGE.GET_SERIES;\n      } else {\n        countInNextPage = remainingCharacters;\n      }\n    }\n\n    return {\n      series,\n      isLoading: isActionLoading(\n        store,\n        CHARACTER_GET_SERIES_REQUEST,\n        CHARACTER_GET_INFO_REQUEST\n      ),\n      isSuccess: isActionSuccess(\n        store,\n        CHARACTER_GET_SERIES_REQUEST,\n        CHARACTER_GET_INFO_REQUEST\n      ),\n      isError: isActionFailure(\n        store,\n        CHARACTER_GET_SERIES_REQUEST,\n        CHARACTER_GET_INFO_REQUEST\n      ),\n      hasMoreToLoad,\n      countInNextPage\n    };\n  });\n\n  const [seriesToList, setSeriesToList] = useState([]);\n  const prevIsLoading = usePrevious(isLoading);\n  const dispatch = useDispatch();\n  const { characterId } = useParams();\n\n  const requestSeries = useCallback(() => {\n    dispatch(getCharacterSeries(characterId));\n  }, [characterId, dispatch]);\n\n  useEffect(() => {\n    dispatch(clearSeries());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!series.length) requestSeries();\n  }, [requestSeries, series.length]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setSeriesToList(current => [\n        ...current,\n        ...getLoadingList(countInNextPage)\n      ]);\n    }\n  }, [isLoading, countInNextPage]);\n\n  useEffect(() => {\n    if (prevIsLoading && isSuccess) {\n      setSeriesToList(series);\n    }\n  }, [isSuccess, prevIsLoading, series]);\n\n  if (isError) {\n    return null;\n  }\n\n  return (\n    <Series\n      isLoading={isLoading}\n      series={seriesToList}\n      hasMoreToLoad={hasMoreToLoad}\n      onLoadMore={requestSeries}\n    />\n  );\n}\n","import { useRef, useEffect } from \"react\";\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin: 0 100px 50px 0;\n\n  button {\n    font-weight: bold;\n  }\n`;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Wrapper } from \"./styles\";\nimport { Button } from \"antd\";\nimport { toggleEditCharacter } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\nimport { CHARACTER_GET_INFO_REQUEST } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\nimport { CHARACTER_GET_SERIES_REQUEST } from \"scenes/CharacterDetails/components/CharacterSeries/actions\";\nimport { isActionLoading } from \"services/api/reducer\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const { isLoadingCharacter, isEditing } = useSelector(store => ({\n    isLoadingCharacter: isActionLoading(\n      store,\n      CHARACTER_GET_INFO_REQUEST,\n      CHARACTER_GET_SERIES_REQUEST\n    ),\n    isEditing: store.character.info.isEditing\n  }));\n\n  const onEdit = () => dispatch(toggleEditCharacter());\n\n  return (\n    <Wrapper>\n      <Button\n        type=\"link\"\n        onClick={onEdit}\n        style={{ visibility: isLoadingCharacter ? \"hidden\" : \"visible\" }}\n      >\n        {isEditing ? \"Cancel\" : \"Edit\"}\n      </Button>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CharacterInfo from \"scenes/CharacterDetails/components/CharacterInfo\";\nimport CharacterSeries from \"scenes/CharacterDetails/components/CharacterSeries\";\nimport { isActionFailure } from \"services/api/reducer\";\nimport { CHARACTER_GET_INFO_REQUEST } from \"scenes/CharacterDetails/components/CharacterInfo/actions\";\nimport { CHARACTER_GET_SERIES_REQUEST } from \"scenes/CharacterDetails/components/CharacterSeries/actions\";\nimport Message from \"components/Message\";\nimport Header from \"./components/Header\";\n\nexport default function CharacterDetails() {\n  const { isError } = useSelector(store => ({\n    isError: isActionFailure(\n      store,\n      CHARACTER_GET_INFO_REQUEST,\n      CHARACTER_GET_SERIES_REQUEST\n    )\n  }));\n\n  if (isError) {\n    return (\n      <Message\n        title=\"Ocorreu um erro ao buscar os detalhes do personagem\"\n        subtitle=\"Por favor, tente novamente mais tarde\"\n      />\n    );\n  }\n\n  return (\n    <>\n      <Header />\n      <CharacterInfo />\n      <CharacterSeries />\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SceneWrapper = styled.div`\n  height: 100%;\n  padding: 100px 200px;\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const NoWrap = styled.span`\n  white-space: nowrap;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader } from \"antd\";\nimport { LogoWrapper, SceneWrapper, NoWrap } from \"./styles\";\n\nexport default function SceneBase({\n  title,\n  subtitle,\n  routes = [],\n  onBack,\n  history,\n  children\n}) {\n  const breadcrumbItemRender = route => (\n    <Link to={route.path}>{route.breadcrumbName}</Link>\n  );\n\n  return (\n    <>\n      <PageHeader\n        title={title && <NoWrap>{title}</NoWrap>}\n        subTitle={subtitle && <NoWrap>{subtitle}</NoWrap>}\n        breadcrumb={{\n          routes: [\n            {\n              path: \"/\",\n              breadcrumbName: \"Home\"\n            },\n            ...routes\n          ],\n          itemRender: breadcrumbItemRender\n        }}\n        onBack={onBack && (() => onBack(history))}\n        style={{ border: \"1px solid rgb(235, 237, 240)\" }}\n      >\n        <LogoWrapper>\n          <img\n            src={`${process.env.PUBLIC_URL}/res/img/marvel-logo.png`}\n            alt=\"Marvel Logo\"\n            style={{ height: 50 }}\n          />\n        </LogoWrapper>\n      </PageHeader>\n      <SceneWrapper>{children}</SceneWrapper>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport SceneBase from \"./components/SceneBase\";\n\nexport default function SceneRoute({\n  title,\n  subtitle,\n  routes,\n  onBack,\n  children,\n  path,\n  ...otherProps\n}) {\n  return (\n    <Route\n      {...otherProps}\n      path={`${process.env.PUBLIC_URL}${path}`}\n      render={({ history }) => (\n        <SceneBase\n          title={title}\n          subtitle={subtitle}\n          routes={routes}\n          onBack={onBack}\n          history={history}\n        >\n          {children}\n        </SceneBase>\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Link } from \"react-router-dom\";\nimport Home from \"../../Home\";\nimport CharacterDetails from \"../../CharacterDetails\";\nimport SceneRoute from \"./components/SceneRoute\";\nimport { Result } from \"antd\";\n\nexport default function Router({ characterName, characterId }) {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <SceneRoute path=\"/\" exact title=\"Marvel Characters\">\n            <Home />\n          </SceneRoute>\n          <SceneRoute\n            path=\"/character/:characterId\"\n            exact\n            onBack={history => history.push(\"/\")}\n            title={characterName || \"Loading...\"}\n            subtitle={characterId && `ID: ${characterId}`}\n            routes={[\n              {\n                path: `/character/${characterId}`,\n                breadcrumbName: \"Character\"\n              }\n            ]}\n          >\n            <CharacterDetails />\n          </SceneRoute>\n          <SceneRoute>\n            <Result\n              status=\"404\"\n              title=\"404\"\n              subTitle=\"Sorry, the page you visited does not exist\"\n              extra={<Link to=\"/\">Back Home</Link>}\n            />\n          </SceneRoute>\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHARACTER_GET_SUCCESS } from \"./actions\";\nimport { CHARACTER_UPDATE } from \"../../actions\";\nimport {\n  putUpdateCharacterInStorage,\n  mergeResultsAndStorage\n} from \"services/storage\";\n\nconst INITIAL_STATE = {\n  characters: []\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHARACTER_GET_SUCCESS: {\n      const {\n        results: characters,\n        ...otherData\n      } = action.payload.response.data;\n      return {\n        ...state,\n        ...otherData,\n        characters: [...state.characters, ...mergeResultsAndStorage(characters)]\n      };\n    }\n\n    case CHARACTER_UPDATE: {\n      const { payload: characterToUpdate } = action;\n\n      return {\n        ...state,\n        characters: putUpdateCharacterInStorage(\n          state.characters,\n          characterToUpdate\n        )\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { CHARACTER_SEARCH_SUCCESS, CHARACTER_SEARCH_REQUEST } from \"./actions\";\nimport { CHARACTER_SEARCH_RESET, CHARACTER_UPDATE } from \"../../actions\";\nimport {\n  mergeResultsAndStorage,\n  putUpdateCharacterInStorage\n} from \"services/storage\";\n\nconst INITIAL_STATE = {\n  characters: [],\n  searchText: \"\"\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHARACTER_SEARCH_REQUEST:\n      return {\n        ...state,\n        searchText: action.meta.searchText,\n        characters: []\n      };\n\n    case CHARACTER_SEARCH_SUCCESS: {\n      const { results: characters, ...otherData } = action.payload.data;\n      return {\n        ...state,\n        ...otherData,\n        characters: [\n          ...state.characters,\n          ...mergeResultsAndStorage(characters, action.meta.searchText)\n        ]\n      };\n    }\n\n    case CHARACTER_SEARCH_RESET:\n      return INITIAL_STATE;\n\n    case CHARACTER_UPDATE: {\n      const { payload: characterToUpdate } = action;\n\n      return {\n        ...state,\n        characters: putUpdateCharacterInStorage(\n          state.characters,\n          characterToUpdate\n        )\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import getReducer from \"./components/Get/reducer\";\nimport searchReducer from \"./components/Search/reducer\";\nimport {\n  CHARACTER_SEARCH_REQUEST,\n  CHARACTER_SEARCH_RESET\n} from \"./components/Search/actions\";\n\nconst INITIAL_STATE = {\n  isSearchMode: false\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  let nextState;\n\n  switch (action.type) {\n    case CHARACTER_SEARCH_REQUEST:\n      nextState = {\n        ...state,\n        isSearchMode: true\n      };\n      break;\n\n    case CHARACTER_SEARCH_RESET:\n      nextState = {\n        ...state,\n        isSearchMode: false\n      };\n      break;\n\n    default:\n      nextState = state;\n      break;\n  }\n\n  return {\n    ...nextState,\n    get: getReducer(state.get, action),\n    search: searchReducer(state.search, action)\n  };\n}\n","import {\n  CHARACTER_GET_INFO_REQUEST,\n  CHARACTER_GET_INFO_SUCCESS,\n  CHARACTER_TOGGLE_EDIT,\n  CHARACTER_UPDATE_INFO\n} from \"./actions\";\nimport { getCharacter } from \"services/storage\";\n\nconst INITIAL_STATE = {\n  isEditing: false,\n  data: {}\n};\n\nexport default function charcterInfoReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHARACTER_GET_INFO_SUCCESS: {\n      const characterData = action.payload.data.results[0];\n      const storedCharacter = getCharacter(characterData.id) || {};\n\n      return {\n        ...state,\n        data: {\n          ...characterData,\n          ...storedCharacter\n        }\n      };\n    }\n\n    case CHARACTER_GET_INFO_REQUEST:\n      return INITIAL_STATE;\n\n    case CHARACTER_TOGGLE_EDIT:\n      return {\n        ...state,\n        isEditing: !state.isEditing\n      };\n\n    case CHARACTER_UPDATE_INFO:\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...action.payload\n        },\n        isEditing: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CHARACTER_GET_SERIES_SUCCESS,\n  CHARACTER_CLEAR_SERIES\n} from \"./actions\";\n\nconst INITIAL_STATE = {\n  series: []\n};\n\nexport default function charcterInfoReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CHARACTER_GET_SERIES_SUCCESS: {\n      const { results: series, ...otherData } = action.payload.data;\n      return {\n        ...state,\n        ...otherData,\n        series: [...state.series, ...series]\n      };\n    }\n\n    case CHARACTER_CLEAR_SERIES:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createMiddleware } from \"redux-api-middleware\";\nimport api from \"services/api\";\nimport characterReducer from \"scenes/Home/components/CharacterList/reducer\";\nimport characterInfoReducer from \"scenes/CharacterDetails/components/CharacterInfo/reducer\";\nimport characterSeriesReducer from \"scenes/CharacterDetails/components/CharacterSeries/reducer\";\nimport statusReducer from \"services/api/reducer\";\n\nconst apiMiddleware = createMiddleware({\n  fetch: api,\n  ok: res => res\n});\nconst createStoreWithMiddleware = applyMiddleware(apiMiddleware)(createStore);\n\nconst reducer = combineReducers({\n  characters: characterReducer,\n  character: combineReducers({\n    info: characterInfoReducer,\n    series: characterSeriesReducer\n  }),\n  status: statusReducer\n});\n\nexport default function configureStore(initialState) {\n  return createStoreWithMiddleware(reducer, initialState);\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Recursive';\n    src: url('${process.env.PUBLIC_URL}/res/fonts/Recursive_VF_1.042.woff2') format('woff2-variations');\n    font-weight: 300 1000;\n  }\n\n  body {\n    font-family: 'Recursive';\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport App from \"./scenes\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store\";\nimport GlobalStyle from \"styles/GlobalStyle\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Router from \"./components/Router\";\n\nexport default function Routes() {\n  const { characterName, characterId } = useSelector(({ character }) => {\n    const { name, id } = character.info.data;\n    return {\n      characterName: name,\n      characterId: id\n    };\n  });\n\n  return <Router characterName={characterName} characterId={characterId} />;\n}\n"],"sourceRoot":""}